#!/usr/bin/env node
'use strict';

const fs = require('fs/promises');
const yargs = require('yargs/yargs');
const { hideBin } = require('yargs/helpers');
const { dictMaker } = require('../lib/index');

(async () => {
  const argv = await yargs(hideBin(process.argv)).option('out', {
    alias: 'o',
    type: 'string',
    description: 'Specify an output folder for dictionary files.',
  }).option('win', {
    type: 'boolean',
    description: 'Enable the export of dictionary data for Windows 10 standard IME.',
  }).option('winGoogle', {
    type: 'boolean',
    description: 'Enable the export of dictionary data for Google IME on Windows 10.',
  }).option('mac', {
    type: 'boolean',
    description: 'Enable the export of dictionary data for macOS IME',
  }).argv;
  const data = typeof argv._[0] === 'string' && await fs.readFile(argv._[0], {
    encoding: 'utf-8',
  }) || '[]';
  const src = JSON.parse(data);

  if (argv.win) {
    dictMaker(src, 'win', argv.out);
  }

  if (argv.winGoogle) {
    dictMaker(src, 'win-google', argv.out);
  }

  if (argv.mac) {
    dictMaker(src, 'mac', argv.out);
  }
})();
